# This is a basic workflow to help you get started with Actions

name: Publising common utilities

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
  #  - uses: actions/cache@v1
   #   with:
    #    path: ~/.m2/repository
     #   key: ${{ runner.os }}-maven-${{ hashFiles('**/pipeline/xml2json/pom.xml') }}
      #  restore-keys: |
       #   ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build
      working-directory: ./rating-common-utilities
      run: mvn -X clean install -s setting.xml
    - name: Stamp artifact file name with commit hash
      working-directory: ./rating-common-utilities
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/.$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: ./rating-common-utilities/target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
   # - uses: actions/cache@v1
    #  with:
     #   path: ~/.m2/repository
      #  key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
       # restore-keys: |
        #  ${{ runner.os }}-maven-
    - uses: actions/download-artifact@master
      with:
        name: artifacts
        path: ./rating-common-utilities/target/*.jar
    - name: Deploy to CloudHub
      working-directory: ./rating-common-utilities
      env:
        USERNAME: ${{ secrets.username }}
        PASSWORD: ${{ secrets.password }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn mule:deploy -Dmule.artifact=$artifactName -Danypoint.userName="$USERNAME" -Danypoint.password="$PASSWORD"
                        

    
